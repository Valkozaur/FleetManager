version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: fleetmanager-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fleetmanager}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fleetmanager_dev}
      POSTGRES_DB: ${POSTGRES_DB:-fleetmanager}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fleetmanager}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fleetmanager-network

  # Email Processing Service
  email-processor:
    build:
      context: ./services/email-processor
      dockerfile: Dockerfile
    container_name: email-poller
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      # Persist data and tokens
      - email_poller_data:/app/data
      - email_poller_logs:/app/logs
      # Mount credentials (you'll need to provide these)
      - ./credentials:/app/credentials:ro
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 1.0
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/credentials/credentials.json || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - fleetmanager-network

volumes:
  postgres_data:
    driver: local
  email_poller_data:
    driver: local
  email_poller_logs:
    driver: local

networks:
  fleetmanager-network:
    driver: bridge